-- Premium Roblox UI Library v1.0
-- Usage: local ui = loadstring(game:HttpGet("your_url_here"))()

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

local Library = {}
Library.__index = Library

-- Configuration
local Config = {
    MainColor = Color3.fromRGB(25, 25, 25),
    AccentColor = Color3.fromRGB(75, 150, 255),
    TextColor = Color3.fromRGB(255, 255, 255),
    BackgroundColor = Color3.fromRGB(15, 15, 15),
    BorderColor = Color3.fromRGB(45, 45, 45),
    NotificationTime = 2,
    AnimationSpeed = 0.3
}

-- Utility Functions
local function CreateTween(object, properties, duration)
    duration = duration or Config.AnimationSpeed
    local tween = TweenService:Create(object, TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), properties)
    return tween
end

local function CreateCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = parent
    return corner
end

local function CreateStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Config.BorderColor
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

-- Main UI Creation
function Library:CreateUI(title)
    title = title or "Premium UI"
    
    -- Main ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "PremiumUI"
    ScreenGui.Parent = PlayerGui
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Notification System
    self:CreateNotification(ScreenGui)
    
    -- Main Container (Initially Hidden)
    local MainContainer = Instance.new("Frame")
    MainContainer.Name = "MainContainer"
    MainContainer.Size = UDim2.new(0, 600, 0, 400)
    MainContainer.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainContainer.BackgroundColor3 = Config.MainColor
    MainContainer.BorderSizePixel = 0
    MainContainer.Visible = false
    MainContainer.Parent = ScreenGui
    CreateCorner(MainContainer, 12)
    CreateStroke(MainContainer, Config.BorderColor, 2)
    
    -- Arrow Toggle Button
    local ArrowButton = Instance.new("TextButton")
    ArrowButton.Name = "ArrowToggle"
    ArrowButton.Size = UDim2.new(0, 50, 0, 30)
    ArrowButton.Position = UDim2.new(0.5, -25, 1, -40)
    ArrowButton.BackgroundColor3 = Config.AccentColor
    ArrowButton.BorderSizePixel = 0
    ArrowButton.Text = "▼"
    ArrowButton.TextColor3 = Config.TextColor
    ArrowButton.TextSize = 18
    ArrowButton.Font = Enum.Font.GothamBold
    ArrowButton.Parent = ScreenGui
    CreateCorner(ArrowButton, 8)
    
    -- Hide Arrow (Above Container)
    local HideArrow = Instance.new("TextButton")
    HideArrow.Name = "HideArrow"
    HideArrow.Size = UDim2.new(0, 40, 0, 25)
    HideArrow.Position = UDim2.new(0.5, -20, 0, -30)
    HideArrow.BackgroundColor3 = Config.AccentColor
    HideArrow.BorderSizePixel = 0
    HideArrow.Text = "▲"
    HideArrow.TextColor3 = Config.TextColor
    HideArrow.TextSize = 14
    HideArrow.Font = Enum.Font.GothamBold
    HideArrow.Parent = MainContainer
    CreateCorner(HideArrow, 6)
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.Position = UDim2.new(0, 0, 0, 0)
    TitleBar.BackgroundColor3 = Config.BackgroundColor
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainContainer
    CreateCorner(TitleBar, 12)
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "Title"
    TitleLabel.Size = UDim2.new(1, -20, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Config.TextColor
    TitleLabel.TextSize = 16
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TitleBar
    
    -- Tab Container
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Size = UDim2.new(1, -20, 0, 35)
    TabContainer.Position = UDim2.new(0, 10, 0, 50)
    TabContainer.BackgroundColor3 = Config.BackgroundColor
    TabContainer.BorderSizePixel = 0
    TabContainer.Parent = MainContainer
    CreateCorner(TabContainer, 8)
    
    local TabLayout = Instance.new("UIListLayout")
    TabLayout.FillDirection = Enum.FillDirection.Horizontal
    TabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    TabLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    TabLayout.Padding = UDim.new(0, 5)
    TabLayout.Parent = TabContainer
    
    -- Content Frame
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Size = UDim2.new(1, -20, 1, -100)
    ContentFrame.Position = UDim2.new(0, 10, 0, 90)
    ContentFrame.BackgroundColor3 = Config.BackgroundColor
    ContentFrame.BorderSizePixel = 0
    ContentFrame.Parent = MainContainer
    CreateCorner(ContentFrame, 8)
    
    -- Settings Tab (Default)
    local SettingsTab = self:CreateTab(TabContainer, ContentFrame, "Settings", true)
    self:CreateSettingsContent(SettingsTab.Content)
    
    -- Animation Logic
    local isVisible = false
    
    ArrowButton.MouseButton1Click:Connect(function()
        if not isVisible then
            MainContainer.Visible = true
            MainContainer.Size = UDim2.new(0, 600, 0, 0)
            MainContainer.Position = UDim2.new(0.5, -300, 0.5, 0)
            
            local showTween = CreateTween(MainContainer, {
                Size = UDim2.new(0, 600, 0, 400),
                Position = UDim2.new(0.5, -300, 0.5, -200)
            })
            showTween:Play()
            
            local arrowTween = CreateTween(ArrowButton, {
                Position = UDim2.new(0.5, -25, 1, -450)
            })
            arrowTween:Play()
            
            isVisible = true
        end
    end)
    
    HideArrow.MouseButton1Click:Connect(function()
        if isVisible then
            local hideTween = CreateTween(MainContainer, {
                Size = UDim2.new(0, 600, 0, 0),
                Position = UDim2.new(0.5, -300, 0.5, 0)
            })
            hideTween:Play()
            
            local arrowTween = CreateTween(ArrowButton, {
                Position = UDim2.new(0.5, -25, 1, -40)
            })
            arrowTween:Play()
            
            hideTween.Completed:Connect(function()
                MainContainer.Visible = false
            end)
            
            isVisible = false
        end
    end)
    
    -- Return UI Object
    local UIObject = {
        ScreenGui = ScreenGui,
        MainContainer = MainContainer,
        TabContainer = TabContainer,
        ContentFrame = ContentFrame,
        Tabs = {},
        CurrentTab = SettingsTab
    }
    
    setmetatable(UIObject, self)
    return UIObject
end

-- Notification System
function Library:CreateNotification(parent)
    wait(0.5) -- Small delay for UI to load
    
    local NotificationFrame = Instance.new("Frame")
    NotificationFrame.Name = "Notification"
    NotificationFrame.Size = UDim2.new(0, 250, 0, 60)
    NotificationFrame.Position = UDim2.new(1, -270, 0, 20)
    NotificationFrame.BackgroundColor3 = Config.AccentColor
    NotificationFrame.BorderSizePixel = 0
    NotificationFrame.Parent = parent
    CreateCorner(NotificationFrame, 10)
    
    local NotificationText = Instance.new("TextLabel")
    NotificationText.Name = "Text"
    NotificationText.Size = UDim2.new(1, -20, 1, 0)
    NotificationText.Position = UDim2.new(0, 10, 0, 0)
    NotificationText.BackgroundTransparency = 1
    NotificationText.Text = "Hello " .. Player.Name .. "!"
    NotificationText.TextColor3 = Config.TextColor
    NotificationText.TextSize = 14
    NotificationText.Font = Enum.Font.Gotham
    NotificationText.TextWrapped = true
    NotificationText.Parent = NotificationFrame
    
    -- Slide in animation
    NotificationFrame.Position = UDim2.new(1, 0, 0, 20)
    local slideIn = CreateTween(NotificationFrame, {Position = UDim2.new(1, -270, 0, 20)})
    slideIn:Play()
    
    -- Auto hide after configured time
    wait(Config.NotificationTime)
    local slideOut = CreateTween(NotificationFrame, {Position = UDim2.new(1, 0, 0, 20)})
    slideOut:Play()
    slideOut.Completed:Connect(function()
        NotificationFrame:Destroy()
    end)
end

-- Tab Creation
function Library:CreateTab(tabContainer, contentFrame, name, isSettings)
    local TabButton = Instance.new("TextButton")
    TabButton.Name = name .. "Tab"
    TabButton.Size = UDim2.new(0, 80, 0, 25)
    TabButton.BackgroundColor3 = isSettings and Color3.fromRGB(180, 50, 50) or Config.BorderColor
    TabButton.BorderSizePixel = 0
    TabButton.Text = name
    TabButton.TextColor3 = Config.TextColor
    TabButton.TextSize = 12
    TabButton.Font = Enum.Font.Gotham
    TabButton.Parent = tabContainer
    CreateCorner(TabButton, 6)
    
    local TabContent = Instance.new("ScrollingFrame")
    TabContent.Name = name .. "Content"
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.Position = UDim2.new(0, 0, 0, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.BorderSizePixel = 0
    TabContent.ScrollBarThickness = 6
    TabContent.ScrollBarImageColor3 = Config.AccentColor
    TabContent.Visible = isSettings or false
    TabContent.Parent = contentFrame
    
    local ContentLayout = Instance.new("UIListLayout")
    ContentLayout.FillDirection = Enum.FillDirection.Vertical
    ContentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    ContentLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    ContentLayout.Padding = UDim.new(0, 10)
    ContentLayout.Parent = TabContent
    
    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.PaddingTop = UDim.new(0, 10)
    ContentPadding.PaddingBottom = UDim.new(0, 10)
    ContentPadding.PaddingLeft = UDim.new(0, 10)
    ContentPadding.PaddingRight = UDim.new(0, 10)
    ContentPadding.Parent = TabContent
    
    -- Tab switching logic
    TabButton.MouseButton1Click:Connect(function()
        -- Hide all tabs
        for _, child in pairs(contentFrame:GetChildren()) do
            if child:IsA("ScrollingFrame") then
                child.Visible = false
            end
        end
        
        -- Reset all tab colors
        for _, child in pairs(tabContainer:GetChildren()) do
            if child:IsA("TextButton") and child ~= TabButton then
                if child.Name ~= "SettingsTab" then
                    child.BackgroundColor3 = Config.BorderColor
                end
            end
        end
        
        -- Show current tab and highlight button
        TabContent.Visible = true
        if not isSettings then
            TabButton.BackgroundColor3 = Config.AccentColor
        end
    end)
    
    local tabObject = {
        Button = TabButton,
        Content = TabContent,
        Layout = ContentLayout
    }
    
    return tabObject
end

-- Settings Content
function Library:CreateSettingsContent(parent)
    -- Title
    local SettingsTitle = Instance.new("TextLabel")
    SettingsTitle.Name = "SettingsTitle"
    SettingsTitle.Size = UDim2.new(1, 0, 0, 30)
    SettingsTitle.BackgroundTransparency = 1
    SettingsTitle.Text = "Settings"
    SettingsTitle.TextColor3 = Config.TextColor
    SettingsTitle.TextSize = 18
    SettingsTitle.Font = Enum.Font.GothamBold
    SettingsTitle.TextXAlignment = Enum.TextXAlignment.Left
    SettingsTitle.Parent = parent
    
    -- Discord Button
    local DiscordButton = Instance.new("TextButton")
    DiscordButton.Name = "DiscordButton"
    DiscordButton.Size = UDim2.new(1, 0, 0, 40)
    DiscordButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
    DiscordButton.BorderSizePixel = 0
    DiscordButton.Text = "Join Discord Server!"
    DiscordButton.TextColor3 = Config.TextColor
    DiscordButton.TextSize = 14
    DiscordButton.Font = Enum.Font.GothamBold
    DiscordButton.Parent = parent
    CreateCorner(DiscordButton, 8)
    CreateStroke(DiscordButton, Color3.fromRGB(100, 30, 30), 2)
    
    DiscordButton.MouseButton1Click:Connect(function()
        -- Add your Discord invite logic here
        print("Discord button clicked!")
    end)
end

-- UI Elements
function Library:CreateButton(parent, text, callback)
    local Button = Instance.new("TextButton")
    Button.Name = "Button"
    Button.Size = UDim2.new(1, 0, 0, 35)
    Button.BackgroundColor3 = Config.AccentColor
    Button.BorderSizePixel = 0
    Button.Text = text or "Button"
    Button.TextColor3 = Config.TextColor
    Button.TextSize = 14
    Button.Font = Enum.Font.Gotham
    Button.Parent = parent
    CreateCorner(Button, 6)
    
    Button.MouseButton1Click:Connect(function()
        if callback then callback() end
    end)
    
    -- Hover effect
    Button.MouseEnter:Connect(function()
        CreateTween(Button, {BackgroundColor3 = Color3.fromRGB(95, 170, 255)}):Play()
    end)
    
    Button.MouseLeave:Connect(function()
        CreateTween(Button, {BackgroundColor3 = Config.AccentColor}):Play()
    end)
    
    return Button
end

function Library:CreateToggle(parent, text, default, callback)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Name = "ToggleFrame"
    ToggleFrame.Size = UDim2.new(1, 0, 0, 35)
    ToggleFrame.BackgroundColor3 = Config.BorderColor
    ToggleFrame.BorderSizePixel = 0
    ToggleFrame.Parent = parent
    CreateCorner(ToggleFrame, 6)
    
    local ToggleLabel = Instance.new("TextLabel")
    ToggleLabel.Name = "Label"
    ToggleLabel.Size = UDim2.new(1, -50, 1, 0)
    ToggleLabel.Position = UDim2.new(0, 10, 0, 0)
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Text = text or "Toggle"
    ToggleLabel.TextColor3 = Config.TextColor
    ToggleLabel.TextSize = 14
    ToggleLabel.Font = Enum.Font.Gotham
    ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    ToggleLabel.Parent = ToggleFrame
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Name = "ToggleButton"
    ToggleButton.Size = UDim2.new(0, 35, 0, 20)
    ToggleButton.Position = UDim2.new(1, -45, 0.5, -10)
    ToggleButton.BackgroundColor3 = default and Config.AccentColor or Color3.fromRGB(60, 60, 60)
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Text = ""
    ToggleButton.Parent = ToggleFrame
    CreateCorner(ToggleButton, 10)
    
    local ToggleIndicator = Instance.new("Frame")
    ToggleIndicator.Name = "Indicator"
    ToggleIndicator.Size = UDim2.new(0, 16, 0, 16)
    ToggleIndicator.Position = default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
    ToggleIndicator.BackgroundColor3 = Config.TextColor
    ToggleIndicator.BorderSizePixel = 0
    ToggleIndicator.Parent = ToggleButton
    CreateCorner(ToggleIndicator, 8)
    
    local isToggled = default or false
    
    ToggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        local buttonColor = isToggled and Config.AccentColor or Color3.fromRGB(60, 60, 60)
        local indicatorPos = isToggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        
        CreateTween(ToggleButton, {BackgroundColor3 = buttonColor}):Play()
        CreateTween(ToggleIndicator, {Position = indicatorPos}):Play()
        
        if callback then callback(isToggled) end
    end)
    
    return ToggleFrame
end

function Library:CreateSlider(parent, text, min, max, default, callback)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Name = "SliderFrame"
    SliderFrame.Size = UDim2.new(1, 0, 0, 50)
    SliderFrame.BackgroundColor3 = Config.BorderColor
    SliderFrame.BorderSizePixel = 0
    SliderFrame.Parent = parent
    CreateCorner(SliderFrame, 6)
    
    local SliderLabel = Instance.new("TextLabel")
    SliderLabel.Name = "Label"
    SliderLabel.Size = UDim2.new(1, -60, 0, 25)
    SliderLabel.Position = UDim2.new(0, 10, 0, 5)
    SliderLabel.BackgroundTransparency = 1
    SliderLabel.Text = text or "Slider"
    SliderLabel.TextColor3 = Config.TextColor
    SliderLabel.TextSize = 14
    SliderLabel.Font = Enum.Font.Gotham
    SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    SliderLabel.Parent = SliderFrame
    
    local ValueLabel = Instance.new("TextLabel")
    ValueLabel.Name = "ValueLabel"
    ValueLabel.Size = UDim2.new(0, 50, 0, 25)
    ValueLabel.Position = UDim2.new(1, -60, 0, 5)
    ValueLabel.BackgroundTransparency = 1
    ValueLabel.Text = tostring(default or min)
    ValueLabel.TextColor3 = Config.AccentColor
    ValueLabel.TextSize = 14
    ValueLabel.Font = Enum.Font.GothamBold
    ValueLabel.TextXAlignment = Enum.TextXAlignment.Right
    ValueLabel.Parent = SliderFrame
    
    local SliderBar = Instance.new("Frame")
    SliderBar.Name = "SliderBar"
    SliderBar.Size = UDim2.new(1, -20, 0, 6)
    SliderBar.Position = UDim2.new(0, 10, 1, -16)
    SliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    SliderBar.BorderSizePixel = 0
    SliderBar.Parent = SliderFrame
    CreateCorner(SliderBar, 3)
    
    local SliderFill = Instance.new("Frame")
    SliderFill.Name = "SliderFill"
    SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    SliderFill.Position = UDim2.new(0, 0, 0, 0)
    SliderFill.BackgroundColor3 = Config.AccentColor
    SliderFill.BorderSizePixel = 0
    SliderFill.Parent = SliderBar
    CreateCorner(SliderFill, 3)
    
    local SliderButton = Instance.new("TextButton")
    SliderButton.Name = "SliderButton"
    SliderButton.Size = UDim2.new(0, 14, 0, 14)
    SliderButton.Position = UDim2.new((default - min) / (max - min), -7, 0.5, -7)
    SliderButton.BackgroundColor3 = Config.TextColor
    SliderButton.BorderSizePixel = 0
    SliderButton.Text = ""
    SliderButton.Parent = SliderBar
    CreateCorner(SliderButton, 7)
    
    local dragging = false
    local currentValue = default or min
    
    SliderButton.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    RunService.Heartbeat:Connect(function()
        if dragging then
            local mouse = Players.LocalPlayer:GetMouse()
            local relativeX = math.clamp((mouse.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
            currentValue = math.floor(min + (max - min) * relativeX)
            
            SliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
            SliderButton.Position = UDim2.new(relativeX, -7, 0.5, -7)
            ValueLabel.Text = tostring(currentValue)
            
            if callback then callback(currentValue) end
        end
    end)
    
    return SliderFrame
end

function Library:CreateDropdown(parent, text, options, callback)
    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Name = "DropdownFrame"
    DropdownFrame.Size = UDim2.new(1, 0, 0, 35)
    DropdownFrame.BackgroundColor3 = Config.BorderColor
    DropdownFrame.BorderSizePixel = 0
    DropdownFrame.Parent = parent
    CreateCorner(DropdownFrame, 6)
    
    local DropdownButton = Instance.new("TextButton")
    DropdownButton.Name = "DropdownButton"
    DropdownButton.Size = UDim2.new(1, 0, 1, 0)
    DropdownButton.Position = UDim2.new(0, 0, 0, 0)
    DropdownButton.BackgroundTransparency = 1
    DropdownButton.Text = text or "Dropdown"
    DropdownButton.TextColor3 = Config.TextColor
    DropdownButton.TextSize = 14
    DropdownButton.Font = Enum.Font.Gotham
    DropdownButton.TextXAlignment = Enum.TextXAlignment.Left
    DropdownButton.Parent = DropdownFrame
    
    local DropdownPadding = Instance.new("UIPadding")
    DropdownPadding.PaddingLeft = UDim.new(0, 10)
    DropdownPadding.PaddingRight = UDim.new(0, 30)
    DropdownPadding.Parent = DropdownButton
    
    local Arrow = Instance.new("TextLabel")
    Arrow.Name = "Arrow"
    Arrow.Size = UDim2.new(0, 20, 1, 0)
    Arrow.Position = UDim2.new(1, -25, 0, 0)
    Arrow.BackgroundTransparency = 1
    Arrow.Text = "▼"
    Arrow.TextColor3 = Config.TextColor
    Arrow.TextSize = 12
    Arrow.Font = Enum.Font.Gotham
    Arrow.Parent = DropdownFrame
    
    local DropdownList = Instance.new("Frame")
    DropdownList.Name = "DropdownList"
    DropdownList.Size = UDim2.new(1, 0, 0, 0)
    DropdownList.Position = UDim2.new(0, 0, 1, 5)
    DropdownList.BackgroundColor3 = Config.MainColor
    DropdownList.BorderSizePixel = 0
    DropdownList.Visible = false
    DropdownList.Parent = DropdownFrame
    CreateCorner(DropdownList, 6)
    CreateStroke(DropdownList, Config.BorderColor, 1)
    
    local ListLayout = Instance.new("UIListLayout")
    ListLayout.FillDirection = Enum.FillDirection.Vertical
    ListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    ListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    ListLayout.Parent = DropdownList
    
    local isOpen = false
    
    -- Create option buttons
    for _, option in pairs(options or {}) do
        local OptionButton = Instance.new("TextButton")
        OptionButton.Name = "Option"
        OptionButton.Size = UDim2.new(1, 0, 0, 30)
        OptionButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        OptionButton.BorderSizePixel = 0
        OptionButton.Text = option
        OptionButton.TextColor3 = Config.TextColor
        OptionButton.TextSize = 12
        OptionButton.Font = Enum.Font.Gotham
        OptionButton.Parent = DropdownList
        
        OptionButton.MouseEnter:Connect(function()
            OptionButton.BackgroundColor3 = Config.AccentColor
        end)
        
        OptionButton.MouseLeave:Connect(function()
            OptionButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        end)
        
        OptionButton.MouseButton1Click:Connect(function()
            DropdownButton.Text = option
            DropdownList.Visible = false
            Arrow.Text = "▼"
            isOpen = false
            
            if callback then callback(option) end
        end)
    end
    
    -- Update dropdown list size
    local optionCount = #(options or {})
    DropdownList.Size = UDim2.new(1, 0, 0, optionCount * 30)
    
    DropdownButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        DropdownList.Visible = isOpen
        Arrow.Text = isOpen and "▲" or "▼"
    end)
    
    return DropdownFrame
end

function Library:CreateInput(parent, text, placeholder, callback)
    local InputFrame = Instance.new("Frame")
    InputFrame.Name = "InputFrame"
    InputFrame.Size = UDim2.new(1, 0, 0, 35)
    InputFrame.BackgroundColor3 = Config.BorderColor
    InputFrame.BorderSizePixel = 0
    InputFrame.Parent = parent
    CreateCorner(InputFrame, 6)
    
    local InputLabel = Instance.new("TextLabel")
    InputLabel.Name = "Label"
    InputLabel.Size = UDim2.new(0, 80, 1, 0)
    InputLabel.Position = UDim2.new(0, 10, 0, 0)
    InputLabel.BackgroundTransparency = 1
    InputLabel.Text = text or "Input:"
    InputLabel.TextColor3 = Config.TextColor
    InputLabel.TextSize = 14
    InputLabel.Font = Enum.Font.Gotham
    InputLabel.TextXAlignment = Enum.TextXAlignment.Left
    InputLabel.Parent = InputFrame
    
    local TextBox = Instance.new("TextBox")
    TextBox.Name = "TextBox"
    TextBox.Size = UDim2.new(1, -100, 0, 25)
    TextBox.Position = UDim2.new(0, 90, 0.5, -12.5)
    TextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TextBox.BorderSizePixel = 0
    TextBox.Text = ""
    TextBox.PlaceholderText = placeholder or "Enter text..."
    TextBox.TextColor3 = Config.TextColor
    TextBox.PlaceholderColor3 = Color3.fromRGB(120, 120, 120)
    TextBox.TextSize = 12
    TextBox.Font = Enum.Font.Gotham
    TextBox.ClearButtonOnFocus = false
    TextBox.Parent = InputFrame
    CreateCorner(TextBox, 4)
    
    local TextBoxPadding = Instance.new("UIPadding")
    TextBoxPadding.PaddingLeft = UDim.new(0, 8)
    TextBoxPadding.PaddingRight = UDim.new(0, 8)
    TextBoxPadding.Parent = TextBox
    
    -- Focus effects
    TextBox.Focused:Connect(function()
        CreateStroke(TextBox, Config.AccentColor, 2)
    end)
    
    TextBox.FocusLost:Connect(function(enterPressed)
        for _, child in pairs(TextBox:GetChildren()) do
            if child:IsA("UIStroke") then
                child:Destroy()
            end
        end
        
        if enterPressed and callback then
            callback(TextBox.Text)
        end
    end)
    
    return InputFrame
end

-- Add Tab Method
function Library:AddTab(name)
    if not self.TabContainer then return end
    
    local newTab = self:CreateTab(self.TabContainer, self.ContentFrame, name, false)
    table.insert(self.Tabs, newTab)
    return newTab
end

-- Mobile Support
local function SetupMobileSupport()
    if UserInputService.TouchEnabled then
        -- Adjust sizes for mobile
        Config.AnimationSpeed = 0.2
        -- Mobile-specific adjustments can be added here
    end
end

-- Initialize Mobile Support
SetupMobileSupport()

-- Return the Library
return Library
